/// <reference types="node" />
import * as grpc from "@grpc/grpc-js";
import { Metadata } from "@grpc/grpc-js";
import { IPadLocalClient } from "./proto/padlocal_grpc_pb";
import VError from "verror";
export declare class GrpcClient {
    static readonly DEFAULT_REQUEST_TIMEOUT: number;
    static readonly MAX_REQ_RES_SIZE: number;
    readonly stub: IPadLocalClient;
    private readonly _callCredentials;
    constructor(serverAddr: string, token?: string, serverCA?: Buffer);
    newRequestMeta(options?: Partial<GrpcOptions>): Metadata;
    newRequestOptions(options?: Partial<GrpcOptions>): Partial<grpc.CallOptions>;
    static getTraceId(meta: Metadata): string;
    static getTimeout(options?: Partial<GrpcOptions>): number;
}
export declare class IOError extends VError {
}
export interface GrpcOptions {
    requestTimeout: number;
    idempotentId: string;
}
