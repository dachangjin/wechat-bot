#!/usr/bin/env ts-node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const tstest_1 = __importDefault(require("tstest"));
const validate_plugin_1 = require("./validate-plugin");
tstest_1.default('validatePlugin() pass', (t) => __awaiter(void 0, void 0, void 0, function* () {
    function Test() {
        return function TestPlugin() {
        };
    }
    t.doesNotThrow(() => validate_plugin_1.validatePlugin(Test), 'should pass a valid plugin');
}));
tstest_1.default('validatePlugin() fail', (t) => __awaiter(void 0, void 0, void 0, function* () {
    function Test() {
        return function TestXXX() {
        };
    }
    t.throws(() => validate_plugin_1.validatePlugin(Test), 'should not pass a invalid plugin');
}));
//# sourceMappingURL=validate-plugin.spec.js.map