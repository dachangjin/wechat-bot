"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DingDong = exports.isMatchConfig = void 0;
/**
 * Author: Huan LI https://github.com/huan
 * Date: Apr 2020
 */
const wechaty_1 = require("wechaty");
const DEFAULT_CONFIG = {
    at: true,
    dm: true,
    room: true,
    self: true,
};
exports.isMatchConfig = (config) => (message) => __awaiter(void 0, void 0, void 0, function* () {
    wechaty_1.log.verbose('WechatyPluginContrib', 'DingDong isMatchConfig(%s)(%s)', JSON.stringify(config), message.toString());
    const normalizedConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);
    if (!normalizedConfig.self) {
        if (message.self()) {
            return false;
        }
    }
    if (normalizedConfig.room) {
        if (message.room()) {
            wechaty_1.log.silly('WechatyPluginContrib', 'DingDong isMatchConfig: match [room]');
            return true;
        }
    }
    if (normalizedConfig.dm) {
        if (!message.room()) {
            wechaty_1.log.silly('WechatyPluginContrib', 'DingDong isMatchConfig: match [dm]');
            return true;
        }
    }
    if (normalizedConfig.at) {
        if (message.room() && (yield message.mentionSelf())) {
            wechaty_1.log.silly('WechatyPluginContrib', 'DingDong isMatchConfig: match [at]');
            return true;
        }
    }
    return false;
});
function DingDong(config) {
    wechaty_1.log.verbose('WechatyPluginContrib', 'DingDong(%s)', typeof config === 'undefined' ? ''
        : typeof config === 'function' ? 'function'
            : JSON.stringify(config));
    let isMatch;
    if (typeof config === 'function') {
        isMatch = (message) => Promise.resolve(config(message));
    }
    else {
        isMatch = exports.isMatchConfig(config);
    }
    return function DingDongPlugin(wechaty) {
        wechaty_1.log.verbose('WechatyPluginContrib', 'DingDong installing on %s ...', wechaty);
        wechaty.on('message', (message) => __awaiter(this, void 0, void 0, function* () {
            if (message.type() !== wechaty_1.Message.Type.Text) {
                return;
            }
            const text = message.room()
                ? yield message.mentionText()
                : message.text();
            if (!/^ding$/i.test(text)) {
                return;
            }
            if (!(yield isMatch(message))) {
                return;
            }
            yield message.say('dong');
        }));
    };
}
exports.DingDong = DingDong;
//# sourceMappingURL=ding-dong.js.map