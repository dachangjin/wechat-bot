"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageAwaiter = void 0;
/**
 * Author: Siyao Liu https://github.com/ssine
 * Date: June 2020
 */
const wechaty_1 = require("wechaty");
const matchers = __importStar(require("../matchers/mod"));
function MessageAwaiter() {
    wechaty_1.log.verbose('WechatyPluginContrib', 'MessageAwaiter');
    return function MessageAwaiterPlugin(wechaty) {
        wechaty_1.log.verbose('WechatyPluginContrib', 'MessageAwaiter installing on %s ...', wechaty);
        wechaty.waitForMessage = (args) => __awaiter(this, void 0, void 0, function* () {
            const matchContact = matchers.contactMatcher(args.contact);
            const matchRoom = matchers.roomMatcher(args.room);
            const matchString = matchers.stringMatcher(args.text);
            const waitTime = new Date();
            return new Promise((resolve, reject) => {
                const callback = (message) => __awaiter(this, void 0, void 0, function* () {
                    const messageFrom = message.from();
                    const messageRoom = message.room();
                    if (message.date() < waitTime)
                        return;
                    if (args.contact && !(messageFrom && (yield matchContact(messageFrom))))
                        return;
                    if (args.room && !(messageRoom && (yield matchRoom(messageRoom))))
                        return;
                    if (args.text && !(yield matchString(message.text())))
                        return;
                    wechaty.off('message', callback);
                    resolve(message);
                });
                wechaty.on('message', callback);
                if (args.timeoutSecond) {
                    setTimeout(() => {
                        wechaty.off('message', callback);
                        reject(Error('timed out'));
                    }, args.timeoutSecond * 1000);
                }
            });
        });
    };
}
exports.MessageAwaiter = MessageAwaiter;
//# sourceMappingURL=message-awaiter.js.map