declare type LanguageCode = 'chinese' | 'danish' | 'norwegian' | 'japanese' | 'dutch' | 'swedish' | 'cebuano' | 'tagalog' | 'german' | 'indonesian' | 'turkish' | 'korean' | 'portuguese' | 'azeri' | 'english' | 'estonian' | 'latin' | 'slovene' | 'swahili' | 'hungarian' | 'spanish' | 'lithuanian' | 'finnish' | 'hawaiian' | 'icelandic' | 'italian';
interface GuessedLanguage {
    code: LanguageCode;
    rate: number;
}
declare function detectLanguage(text: string, limit?: number): GuessedLanguage[];
declare function includeLanguage(resultList: GuessedLanguage[], language: LanguageCode, threshold?: number): boolean;
export declare type LanguageMatcherOptions = LanguageCode | LanguageCode[];
declare function languageMatcher(options: LanguageMatcherOptions): (text: string) => boolean;
export { detectLanguage, languageMatcher, includeLanguage, };
//# sourceMappingURL=language-matcher.d.ts.map